name: Send PR Data on Merge

on:
  pull_request:
    types: [closed]

jobs:
  send-pr-data:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Get commits from PR
        id: commits
        uses: actions/github-script@v7
        with:
          script: |
            const { data: commits } = await github.rest.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            if (!commits.length) {
              core.setOutput("messages", "No commits found");
              core.setOutput("emoji", "ðŸ“¦");
              return;
            }

            // List of commits
            const messages = commits.map(c => `- ${c.commit.message}`).join("\n");

            // Emoji del primer commit
            let firstCommitMsg = commits[0].commit.message.trim();
            let emoji = firstCommitMsg.charAt(0);

            // If it's not a valid emoji (normal character), use ðŸ“¦ as fallback
            if (!/\p{Emoji}/u.test(emoji)) {
              emoji = "ðŸ“¦";
            }

            core.setOutput("messages", messages);
            core.setOutput("emoji", emoji);

      - name: Save on Notion
        run: |
          curl -X POST "https://api.notion.com/v1/pages" \
            -H "Authorization: Bearer ${{ secrets.NOTION_TOKEN }}" \
            -H "Content-Type: application/json" \
            -H "Notion-Version: 2022-06-28" \
            -d '{
              "parent": { "database_id": "26aa14b2-48a0-802e-ae81-ea4a45fa820a" },
              "icon": { "emoji": "${{ steps.commits.outputs.emoji }}" },
              "properties": {
                "PR Number": { "number": '${{ github.event.pull_request.number }}' },
                "Title": { "title": [{ "text": { "content": "${{ github.event.pull_request.title }}" }}] },
                "Merged By": { "rich_text": [{ "text": { "content": "${{ github.event.pull_request.merged_by.login }}" }}] },
                "Merged at": { "date": { "start": "${{ github.event.pull_request.merged_at }}" } },
                "Comments": { "rich_text": [{ "text": { "content": ${{ toJSON(steps.commits.outputs.messages) }} }}] }
              }
            }'
